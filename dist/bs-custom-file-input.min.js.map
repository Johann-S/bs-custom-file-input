{"version":3,"file":"bs-custom-file-input.min.js","sources":["../src/selector.js","../src/util.js","../src/eventHandlers.js","../src/index.js"],"sourcesContent":["const Selector = {\n  CUSTOMFILE: '.custom-file input[type=\"file\"]',\n  CUSTOMFILELABEL: '.custom-file-label',\n  FORM: 'form',\n}\n\nexport default Selector\n","import Selector from './selector'\n\nconst getDefaultText = (input) => {\n  let defaultText = ''\n\n  const label = input.parentNode.querySelector(Selector.CUSTOMFILELABEL)\n\n  if (label) {\n    defaultText = label.innerHTML\n  }\n\n  return defaultText\n}\n\nconst restoreDefaultText = (input) => {\n  const defaultText = input.bsCustomFileInput.defaultText\n  const label = input.parentNode.querySelector(Selector.CUSTOMFILELABEL)\n\n  if (label) {\n    label.innerHTML = defaultText\n  }\n}\n\nexport {\n  getDefaultText,\n  restoreDefaultText,\n}\n","import Selector from './selector'\nimport { restoreDefaultText } from './util'\n\nconst fileApi = !!window.File\n\nconst getSelectedFiles = (input) => {\n  if (input.hasAttribute('multiple') && fileApi) {\n    const files = [].slice.call(input.files)\n      .map((file) => file.name)\n\n    return files.join(', ')\n  } else {\n    return input.value\n  }\n}\n\nfunction handleInputChange() {\n  const label = this.parentNode.querySelector(Selector.CUSTOMFILELABEL)\n\n  if (label) {\n    label.innerHTML = getSelectedFiles(this)\n  }\n}\n\nfunction handleFormReset() {\n  const customFileList = [].slice.call(this.querySelectorAll(Selector.CUSTOMFILE))\n\n  for (let i = 0, len = customFileList.length; i < len; i++) {\n    restoreDefaultText(customFileList[i])\n  }\n}\n\nexport {\n  handleInputChange,\n  handleFormReset,\n}\n","import { getDefaultText, restoreDefaultText } from './util'\nimport {\n  handleFormReset,\n  handleInputChange,\n} from './eventHandlers'\nimport Selector from './selector'\n\nconst Event = {\n  INPUTCHANGE   : 'change',\n  INPUTFOCUSIN  : 'focusin',\n  INPUTFOCUSOUT : 'focusout',\n  FORMRESET     : 'reset',\n}\n\nconst customProperty = 'bsCustomFileInput'\n\nconst bsCustomFileInput = {\n  init() {\n    const customFileInputList = [].slice.call(document.querySelectorAll(Selector.CUSTOMFILE))\n    const formList = [].slice.call(document.querySelectorAll(Selector.FORM))\n\n    for (let i = 0, len = customFileInputList.length; i < len; i++) {\n      const input = customFileInputList[i]\n\n      Object.defineProperty(input, customProperty, {\n        value: {\n          defaultText: getDefaultText(input),\n        },\n        writable: true,\n      })\n\n      input.addEventListener(Event.INPUTCHANGE, handleInputChange)\n    }\n\n    for (let i = 0, len = formList.length; i < len; i++) {\n      formList[i].addEventListener(Event.FORMRESET, handleFormReset)\n    }\n  },\n\n  destroy() {\n    const formList = [].slice.call(document.querySelectorAll(Selector.FORM))\n    const customFileInputList = [].slice.call(document.querySelectorAll(Selector.CUSTOMFILE))\n      .filter((input) => !!input.bsCustomFileInput)\n\n    for (let i = 0, len = customFileInputList.length; i < len; i++) {\n      const input = customFileInputList[i]\n\n      restoreDefaultText(input)\n      input[customProperty] = undefined\n\n      input.removeEventListener(Event.INPUTCHANGE, handleInputChange)\n    }\n\n    for (let i = 0, len = formList.length; i < len; i++) {\n      formList[i].removeEventListener(Event.FORMRESET, handleFormReset)\n    }\n  },\n}\n\nexport default bsCustomFileInput\n"],"names":["Selector","CUSTOMFILE","CUSTOMFILELABEL","FORM","restoreDefaultText","input","defaultText","bsCustomFileInput","label","parentNode","querySelector","innerHTML","fileApi","window","File","getSelectedFiles","hasAttribute","slice","call","files","map","file","name","join","value","handleInputChange","this","handleFormReset","customFileList","querySelectorAll","i","len","length","Event","customProperty","init","customFileInputList","document","formList","Object","defineProperty","writable","addEventListener","destroy","filter","undefined","removeEventListener"],"mappings":";;;;;6LAAA,IAAMA,EAAW,CACfC,WAAY,kCACZC,gBAAiB,qBACjBC,KAAM,QCWFC,EAAqB,SAACC,OACpBC,EAAcD,EAAME,kBAAkBD,YACtCE,EAAQH,EAAMI,WAAWC,cAAcV,EAASE,iBAElDM,IACFA,EAAMG,UAAYL,IChBhBM,IAAYC,OAAOC,KAEnBC,EAAmB,SAACV,UACpBA,EAAMW,aAAa,aAAeJ,EACtB,GAAGK,MAAMC,KAAKb,EAAMc,OAC/BC,IAAI,SAACC,UAASA,EAAKC,OAETC,KAAK,MAEXlB,EAAMmB,OAIjB,SAASC,QACDjB,EAAQkB,KAAKjB,WAAWC,cAAcV,EAASE,iBAEjDM,IACFA,EAAMG,UAAYI,EAAiBW,OAIvC,SAASC,YACDC,EAAiB,GAAGX,MAAMC,KAAKQ,KAAKG,iBAAiB7B,EAASC,aAE3D6B,EAAI,EAAGC,EAAMH,EAAeI,OAAQF,EAAIC,EAAKD,IACpD1B,EAAmBwB,EAAeE,ICrBtC,IAAMG,EACY,SADZA,EAIY,QAGZC,EAAiB,0BAEG,CACxBC,wBFfsB9B,EAClBC,EAEEE,EEaE4B,EAAsB,GAAGnB,MAAMC,KAAKmB,SAASR,iBAAiB7B,EAASC,aACvEqC,EAAW,GAAGrB,MAAMC,KAAKmB,SAASR,iBAAiB7B,EAASG,OAEzD2B,EAAI,EAAGC,EAAMK,EAAoBJ,OAAQF,EAAIC,EAAKD,IAAK,KACxDzB,EAAQ+B,EAAoBN,GAElCS,OAAOC,eAAenC,EAAO6B,EAAgB,CAC3CV,MAAO,CACLlB,aFxBcD,EEwBcA,EFvBhCC,OAAAA,OAEEE,EAFFF,EAAc,GAEZE,EAAQH,EAAMI,WAAWC,cAAcV,EAASE,iBAElDM,IACFF,EAAcE,EAAMG,WAGfL,IEiBDmC,UAAU,IAGZpC,EAAMqC,iBAAiBT,EAAmBR,OAGvC,IAAIK,EAAI,EAAGC,EAAMO,EAASN,OAAQF,EAAIC,EAAKD,IAC9CQ,EAASR,GAAGY,iBAAiBT,EAAiBN,IAIlDgB,2BACQL,EAAW,GAAGrB,MAAMC,KAAKmB,SAASR,iBAAiB7B,EAASG,OAC5DiC,EAAsB,GAAGnB,MAAMC,KAAKmB,SAASR,iBAAiB7B,EAASC,aAC1E2C,OAAO,SAACvC,WAAYA,EAAME,oBAEpBuB,EAAI,EAAGC,EAAMK,EAAoBJ,OAAQF,EAAIC,EAAKD,IAAK,KACxDzB,EAAQ+B,EAAoBN,GAElC1B,EAAmBC,GACnBA,EAAM6B,QAAkBW,EAExBxC,EAAMyC,oBAAoBb,EAAmBR,OAG1C,IAAIK,EAAI,EAAGC,EAAMO,EAASN,OAAQF,EAAIC,EAAKD,IAC9CQ,EAASR,GAAGgB,oBAAoBb,EAAiBN"}